name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies (Next.js app)
        run: npm install

      - name: Debug Sanity Environment Variables
        run: |
          echo "NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}"
          echo "NEXT_PUBLIC_SANITY_DATASET: ${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}"
          echo "NEXT_PUBLIC_SANITY_API_VERSION: ${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}"

      - name: Run Linter (Next.js app)
        run: npm run lint

      - name: Build Next.js app
        run: |
          echo "--- DEBUG ---"
          echo "Value of NEXT_PUBLIC_SANITY_API_VERSION is: $NEXT_PUBLIC_SANITY_API_VERSION"
          echo "--- END DEBUG ---"
          npm run build
        env:
          NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
          NEXT_PUBLIC_SANITY_DATASET: ${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}
          NEXT_PUBLIC_SANITY_API_VERSION: ${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}

      - name: Run tests (Next.js app)
        run: npx jest

      - name: Run Lighthouse CI
        run: npx lhci autorun

      - name: Install dependencies (Sanity Studio)
        run: npm install
        working-directory: ./sanity

      - name: Build Sanity Studio
        run: npm run build
        working-directory: ./sanity

      # Add deployment steps here based on your hosting provider
      # Example for Vercel deployment (requires VERCEL_TOKEN and ORG_ID/PROJECT_ID secrets)
      - name: Deploy to Vercel
        if: github.ref == 'refs/heads/main'
        run: npx vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
          NEXT_PUBLIC_SANITY_DATASET: ${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}
          NEXT_PUBLIC_SANITY_API_VERSION: ${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}
